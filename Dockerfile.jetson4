FROM ultralytics/ultralytics:8.3.146-jetson-jetpack4

ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    TZ=Europe/Moscow \
    VCPKG_FORCE_SYSTEM_BINARIES=1 \
    VCPKG_DEFAULT_TRIPLET=arm64-linux \
    PYTHONIOENCODING=utf-8 \
    PYTHONUTF8=1 \
    PATH="/vcpkg_dir/vcpkg:${PATH}"

# Установка таймзоны и зеркал
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
    sed -i 's|http://archive.ubuntu.com/ubuntu|http://mirror.yandex.ru/ubuntu|g' /etc/apt/sources.list && \
    sed -i 's|http://security.ubuntu.com/ubuntu|http://mirror.yandex.ru/ubuntu|g' /etc/apt/sources.list

# Системные зависимости
RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common \
    tzdata \
    curl \
    gnupg2 \
    lsb-release \
    wget \
    git \
    unzip \
    zip \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    cmake \
    ninja-build \
    libglib2.0-0 \
    libgl1-mesa-glx \
    libsm6 \
    libxext6 \
    libxrender-dev \
    pkg-config \
    autoconf \
    automake \
    libtool \
    m4 \
    libudev-dev \
    libopencv-dev \
    python3-colcon-common-extensions \
    python3-argcomplete \
    python3-rosdep \
    && rm -rf /var/lib/apt/lists/*

# CMake (совместимая версия для Ubuntu 18.04)
ARG CMAKE_VERSION=3.22.6
RUN curl -sSL https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-aarch64.sh -o cmake-install.sh && \
    chmod +x cmake-install.sh && \
    ./cmake-install.sh --skip-license --prefix=/usr/local && \
    rm cmake-install.sh

# vcpkg
WORKDIR /vcpkg_dir
COPY ./vcpkg.json /vcpkg_dir/ros_packages/vcpkg.json
RUN git clone https://github.com/microsoft/vcpkg.git && \
    cd vcpkg && \
    git checkout 62c4a7ad6333ae50b31302c48cb3ca5712828b03 && \
    ./bootstrap-vcpkg.sh -disableMetrics && \
    ./vcpkg install --triplet=arm64-linux --x-manifest-root=/vcpkg_dir/ros_packages && \
    rm -rf /vcpkg_dir/vcpkg/buildtrees /vcpkg_dir/vcpkg/downloads

# ROS 2 Dashing
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \
    echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2.list && \
    apt-get update && apt-get install -y --no-install-recommends \
    ros-dashing-ros-base \
    ros-dashing-rosidl-default-generators \
    ros-dashing-rosidl-default-runtime \
    ros-dashing-ament-cmake \
    && rm -rf /var/lib/apt/lists/*

# rosdep init
RUN if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]; then rosdep i
